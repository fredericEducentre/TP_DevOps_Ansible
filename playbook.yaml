- name: Ping all hosts
  hosts: vm-group
  become: true
  tasks:
    - name: Ping the host
      ansible.builtin.ping:
    # Créer un réseau pour les outils de CI-CD
    - name: Create a network
      ansible.builtin.shell: docker network create ci-cd
    # Créer un container Jenkins
    - name: Pull Jenkins image
      ansible.builtin.shell: docker pull jenkins/jenkins:lts-jdk17
    - name: Create a Jenkins container
      ansible.builtin.shell: docker run -d --name jenkins_container --network ci-cd -p 8080:8080 -p 50000:50000 --restart=on-failure -v jenkins_home:/var/jenkins_home jenkins/jenkins:lts-jdk17
    # Créer un container Postgres
    - name: Pull Postgres image
      ansible.builtin.shell: docker pull postgres:12
    - name: Create a Postgres container
      ansible.builtin.shell: docker run --name postgres_container --network ci-cd -e POSTGRES_USER=sonar -e POSTGRES_PASSWORD=sonar -d postgres:12
    # Créer un container Sonarqube
    - name: Pull sonarqube image
      ansible.builtin.shell: docker pull sonarqube:community
    - name: Create a Sonarqube container
      ansible.builtin.shell: docker run --name sonarqube --network ci-cd -e SONAR_JDBC_URL=jdbc:postgresql://postgres_container:5432/sonar -e SONAR_JDBC_USERNAME=sonar -e SONAR_JDBC_PASSWORD=sonar -p 9000:9000 -d sonarqube:community